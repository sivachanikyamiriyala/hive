create database if not exists january
comment 'database name is january'
location '/hive/january' 
with dbproperties('key1'='value1')  
;


describe database january ;

describe databse extended january ;

create table if not exists student1(name string,id int,course string,year int) 
comment 'table name is student1' 
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile 
;
create table if not exists student2(name string,id int,course string,year int) 
comment 'table name is student2' 
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile 
;

create external table if not exists student3(name string,id int,course string,year int) 
comment 'table name is student3' 
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile 
;
create temporary table if not exists student4(name string,id int,course string,year int) 
comment 'table name is student4' 
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile 
;


load data local inpath '/home/siva/work/hive_inputs/student.txt' overwrite into table student1 ;
load data local inpath '/home/siva/work/hive_inputs/student.txt' overwrite into table student2 ;

load data local inpath '/home/siva/work/hive_inputs/student.txt' overwrite into table student1 ;





create table if not exists studenttext1(name string,id int,course string,year int) 
comment 'table name is studenttext1' 
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile 
;

create external table if not exists studenttext2(name string,id int,course string,year int) 
comment 'table name is studenttext2' 
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile 
location '/hive/externaldata' 
;


create table if not exists student
(name string comment 'student name',
id int comment 'student id',
course string comment 'student course',
year int comment 'student year') 
comment 'table name is student' 
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile 
location '/hive/january/student' 
;


create external table if not exists studentdata 
(name string comment 'student name ',
subjects array<string> comment 'student subjets',
marks map<string,int> comment 'student marks',
address struct<loc:string comment 'student loc',pincode:int comment 'student pincode',city:string comment 'student city'> comment 'studentadd',
details uniontype<double,int,array<string>,struct<a:int,b:string>,boolean> comment 'student details'
)
comment 'studentdata is the table name ' 
row format delimited 
fields terminated by '#'
collection items terminated by ','
map keys terminated by ':' 
lines terminated by '\n' 
stored as textfile 
location '/hive/january/studentdata' 
;

create table if not exists student_partition(name string,id int) 
partitioned by (course string,year int) 
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile ;
 

insert into table student_partition partition(course='eee',year=1) select name,id from student where course='cse' and year =1 ;

create table if not exists products(name string,id int,price int)
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile ;

load data local inpath '/home/siva/work/hive_inputs/products.txt' overwrite into table products  ;


create table if not exists sales(name string,year int,percentage double)
row format delimited 
fields terminated by '\t' 
lines terminated by '\n' 
stored as textfile ;

load data local inpath '/home/siva/work/hive_inputs/sales.txt' overwrite into table sales  ;





















create table if not exists student_textfile(name string,id int,course string,year int) 
stored as textfile ;


create table if not exists student_sequencefile(name string,id int,course string,year int) 
stored as sequencefile ;

create table if not exists student_avro(name string,id int,course string,year int) 
stored as avro ;

create table if not exists student_rcfile(name string,id int,course string,year int) 
stored as rcfile ;

create table if not exists student_orc(name string,id int,course string,year int) 
stored as orc ;

create table if not exists student_parquet(name string,id int,course string,year int) 
stored as parquet ;





insert into table student_textfile select * from student ;


insert into table student_sequencefile select * from student ;

insert into table student_avro select * from student ;

insert into table student_rcfile select * from student ;

insert into table student_orc select * from student ;

insert into table student_parquet select * from student ;



create table if not exists student_old(name string,id string,course string,year string) 
row format serde 'org.apache.hadoop.hive.contrib.serde2.RegexSerDe' ;


create table if not exists student_new(name string,id int,course string,year int) 
row format serde 'org.apache.hadoop.hive.serde2.RegexSerDe' 
with serdeproperties("input.regex"="([^\t]*)\t([^\t]*)\t([^\t]*)\t([^\t]*)")
;

load data local inpath '/home/siva/work/hive_inputs/student.txt' overwrite into table student_old ;

load data local inpath '/home/siva/work/hive_inputs/student.txt' overwrite into table student_new ;


create table if not exists student_acid(name string,id int,course string,year int) 
clustered by (name) into 4 buckets 
stored as orc 
tblproperties('transactional'='true') ;

create table if not exists docs(line string) ;

load data local inpath '/home/siva/work/demoinput' overwrite into table docs ;












































































